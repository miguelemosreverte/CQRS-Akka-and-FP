akka {
  cluster {
    log-info = off
    use-dispatcher = cluster-dispatcher
    min-nr-of-members = 1

    failure-detector {
      # implementation-class = "akka.remote.PhiAccrualFailureDetector"
      heartbeat-interval = 5 s
      threshold = 12.0
      max-sample-size = 1000
      min-std-deviation = 400 ms
      acceptable-heartbeat-pause = 11 s
      monitored-by-nr-of-members = 3
      expected-response-after = 2 s
    }

    auto-discovery = off
    seed-nodes = []
    seed-nodes = [${?SEED_NODES}]
    shutdown-after-unsuccessful-join-seed-nodes = 30s
  }

  # SBR
  #cluster.downing-provider-class = "tanukki.akka.cluster.autodown.MajorityLeaderAutoDowning"
  cluster.downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  custom-downing {
    stable-after = 10s

    majority-leader-auto-downing {
      majority-member-role = ""
      down-if-in-minority = true
      shutdown-actor-system-on-resolution = true
    }
  }
}

cluster-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 2
      parallelism-max = 4
    }
}

